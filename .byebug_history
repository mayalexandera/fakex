q
exit
exigt
self.stocks.find_or_create_by(stock_id: trade.stock_id)
self.stocks
params
trade
stock
c
stock
self.stocks
self
stock
stocks
trade
c
params
c
@listing
listing
params[:listing][:stock_id]
stock_id
c
params
:stock_id
stock_id
c
params
@listing
c
@stocks.nil?
@stocks
c
@listing
c
@trade
c
@listing.total_listing_price
@user.account_balance
@user
@listing
c
n
c
@listings
c
...
@listings
Listing.active_listings
Listing.where(stock_id: @stock.id)
@stock
@listings
c
current_balance
new_balance
c
new_balance
input
attribute
current_balance
c
input
attribute
new_balance
current_balance
c
attribute
new_balance
current_balance
c
input
new_balance
current_balance
c
monetize
current_balance
new_balance
input
c
n
@listing
@kisting
n
@listing
c
@stocks
@stock
@listings
c
@listings
#listings
c
Listing.active_listings
Listing.where(status: 0)
Listing.where(status: active)
Listing.all
@listings
@stock
c
n
@listing
n
@listing
c
@listing
c
n
c
n
nn
n
c
@listing
c
n
c
n
@listing
n
@listing
c
@listings
c
@listing
n
@listing
c
@listings
c
@listing
c
@listings
c
@listings
c
@listings
@stock
c
exit
@stock.active_listings.count
@stock.listings.count
@stock.active_listings
@stock
exit
@user
c
`
user.account_balance + new
new = Money.new(attribute.to_i, "USD")
attribute.to_i
input
user.account_balance
user
current_balance
c
current_user
c
attribute
current_user
current_balance
c
n
current_user
n
current_user
@user
q
current_user
c
q
@user
c
@user
c
n
flash[:notice]
flash
c
exit
OwnedByUser.create_or_update(@user, @listing)
OwnedByUser.find_user(@user, @listing)
@user.buy_stock(@trade)
@listing
@user.stocks
n
@user
exit
user
exit
params[:id]
stock.id
stick.id
q
@user
exit
total
c
total
c
seller
c
balance
seller
c
seller
c
trade.listing.seller.account_balance
sold
c
self.purchase_price
trade.itself
trade.self
trade
c
self
self.trade_id
self.id
self.user_id
trade.count
trade
c
self.stock_id
self
trade.first
Trade.first
trade
xtrade
exit
trade
exit
trade.all
trade
trade.listing_id
trade
exit
self
trade
trade[:stock_id]
trade.stock_id
trade
exit
self
trade
exit
stocks.update(stock.id, amount: updated)
stock
exit
stock.class
stock.amount.class
trade.num_of_stocks.class
trade.num_of_stocks
stock.class.class
stock
stock.class
exit
trade.stock_id
